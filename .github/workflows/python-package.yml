
```yaml
# Workflow for building, testing, and deploying a full-stack Python and React web application

name: Full-Stack WebApp CI/CD
date: 2024-12-01
version: 2.3.0

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  backend:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest pytest-django
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Run unit tests
      run: pytest

    - name: Run integration tests
      run: pytest tests/integration

    - name: Check Python version
      run: python --version

    - name: List installed packages
      run: pip list

    # Optional deployment step for backend
    # Uncomment and configure for Heroku, AWS, or another platform
    # - name: Deploy Backend to Heroku
    #   uses: akhileshns/heroku-deploy@v3.12.12
    #   with:
    #     heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
    #     heroku_app_name: "your-backend-heroku-app-name"
    #     heroku_email: "your-email@example.com"

  frontend:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Cache Node.js modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install Node.js dependencies
      run: npm ci

    - name: Lint frontend code
      run: npm run lint

    - name: Run frontend tests
      run: npm test

    - name: Build frontend
      run: npm run build

    # Optional deployment step for frontend
    # Uncomment and configure for deployment (e.g., to Netlify, Vercel, etc.)
    # - name: Deploy Frontend
    #   run: <command to deploy frontend>

```